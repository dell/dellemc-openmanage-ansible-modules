---
- hosts: ome
  connection: local
  name: "OME - Update Firmware"
  gather_facts: false
  vars:
    retries_count: 100
    polling_interval: 10
    all_firmware_task_tags:
      - device-ids
      - service-tags
      - group-name
      - baseline-name
      - baseline-name-dup

  tasks:
    - name: Update firmware from a DUP file using a device ids.
      dellemc.openmanage.ome_firmware:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        ca_path: "/path/to/ca_cert.pem"
        device_id:
          - 11111
          - 22222
        dup_file: "/path/Chassis-System-Management_Firmware_6N9WN_WN64_1.00.01_A00.EXE"
      register: result
      tags:
        - device-ids

    - name: Update firmware from a DUP file using a device service tags.
      dellemc.openmanage.ome_firmware:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        ca_path: "/path/to/ca_cert.pem"
        device_service_tag:
          - KLBR111
          - KLBR222
        dup_file: "/path/Network_Firmware_NTRW0_WN64_14.07.07_A00-00_01.EXE"
      register: result
      tags:
        - service-tags

    - name: Update firmware from a DUP file using a device group names.
      dellemc.openmanage.ome_firmware:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        ca_path: "/path/to/ca_cert.pem"
        device_group_names:
          - servers
        dup_file: "/path/BIOS_87V69_WN64_2.4.7.EXE"
      register: result
      tags:
        - group-name

    - name: Update firmware using baseline name.
      dellemc.openmanage.ome_firmware:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        ca_path: "/path/to/ca_cert.pem"
        baseline_name: baseline_devices
      register: result
      tags:
        - baseline-name

    - name: Track job details for the ome firmware update operation using a job id.
      dellemc.openmanage.ome_job_info:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        ca_path: "/path/to/ca_cert.pem"
        job_id: "{{ result.update_status.Id }}"
      register: job_result
      until: job_result.job_info.LastRunStatus.Name == 'Completed'
        or job_result.job_info.LastRunStatus.Name == 'Failed'
        or job_result.job_info.LastRunStatus.Name == 'Warning'
      retries: "{{ retries_count }}"
      delay: "{{ polling_interval }}"
      tags: "{{ all_firmware_task_tags }}"

    - name: Set job fact details if the task status is warning.
      ansible.builtin.set_fact:
        ome_firmware_job_fact: "{{ job_result | combine(job_msg, recursive=true) }}"
      failed_when: job_result.job_info.LastRunStatus.Name == 'Warning'
      vars:
        job_msg:
          {
            "msg": "Completed with {{ job_result.job_info.LastRunStatus.Name | lower }}",
          }
      when: job_result.job_info.LastRunStatus.Name == 'Warning'
      tags: "{{ all_firmware_task_tags }}"

    - name: Set job fact details if the task status is completed or failed.
      ansible.builtin.set_fact:
        ome_firmware_job_fact: "{{ job_result }}"
      failed_when: job_result.job_info.LastRunStatus.Name == 'Failed'
      changed_when: job_result.job_info.LastRunStatus.Name == 'Completed'
      when: job_result.job_info.LastRunStatus.Name == 'Completed' or job_result.job_info.LastRunStatus.Name == 'Failed'
      tags: "{{ all_firmware_task_tags }}"
