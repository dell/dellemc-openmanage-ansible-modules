---
- name: Get Storage information.
  ansible.builtin.uri:
    url: "https://{{ hostname }}:{{ https_port }}{{ api_system }}/Storage"
    validate_certs: "{{ validate_certs }}"
    ca_path: "{{ ca_path | default(omit) }}"
    method: "{{ uri_method }}"
    user: "{{ username }}"
    password: "{{ password }}"
    timeout: "{{ https_timeout }}"
    force_basic_auth: true
    headers: "{{ uri_headers }}"
    body_format: "{{ uri_body_format }}"
    status_code: "{{ uri_status_code }}"
    return_content: "{{ uri_return_content }}"
  register: disk_result
  delegate_to: "{{ lookup('ansible.builtin.env', 'RUNON', default='localhost') }}"

- name: Get all storage controller ids.
  ansible.builtin.set_fact:
    storage_ids_list: "{{ disk_result.json.Members | map('dict2items') | flatten | map(attribute='value') }}"

- name: Get PhysicalDisk information.
  ansible.builtin.uri:
    url: "https://{{ hostname }}:{{ https_port }}{{ item }}?$expand=*($levels=1)"
    validate_certs: "{{ validate_certs }}"
    ca_path: "{{ ca_path | default(omit) }}"
    method: "{{ uri_method }}"
    user: "{{ username }}"
    password: "{{ password }}"
    force_basic_auth: true
    timeout: "{{ https_timeout }}"
    headers: "{{ uri_headers }}"
    body_format: "{{ uri_body_format }}"
    status_code: "{{ uri_status_code }}"
    return_content: "{{ uri_return_content }}"
  loop: "{{ storage_ids_list }}"
  register: result
  delegate_to: "{{ lookup('ansible.builtin.env', 'RUNON', default='localhost') }}"

- name: Set Physical Disk facts
  ansible.builtin.set_fact:
    physical_disk:
      "{{ result.results | selectattr('json', 'defined') | map(attribute='json') | selectattr('Drives', 'defined') |
      map(attribute='Drives') | flatten | ansible.utils.remove_keys(target=['@odata.context', '@odata.id', '@odata.type',
      'Actions', 'Assembly', 'Links', 'DellDriveSMARTAttributes', 'DellNVMeSMARTAttributes', 'Operations@odata.count']) }}"
