---
- name: Fetching data from iDRAC for PERC
  ansible.builtin.include_tasks:
    file: ../__extract_storage.yml
  vars:
    redfish_storage_volume_search_in_name: 'PERC'
    redfish_storage_volume_raid: "RAID0"

- name: Setting PERC controller_id
  ansible.builtin.set_fact:
    redfish_storage_volume_perc_raid_controller_id: >-
      "{{ redfish_storage_volume_controller_id }}"
  when: redfish_storage_volume_controller_id != ""

- name: "Checking minimum number of drives for RAID0"
  ansible.builtin.debug:
    msg: >-
      Minimum number of required drives: 1, current:
      {{ redfish_storage_volume_drive_list | length }}
  when: redfish_storage_volume_drive_list | length < 1

- name: Pre-req Create a volume.
  ansible.builtin.import_role:
    name: redfish_storage_volume
  vars:
    hostname: "{{ lookup('env', 'IDRAC_IP') }}"
    username: "{{ lookup('env', 'IDRAC_USER') }}"
    password: "{{ lookup('env', 'IDRAC_PASSWORD') }}"
    validate_certs: false
    state: present
    raid_type: "RAID0"
    name: "VD" # noqa: var-naming[no-reserved]
    controller_id: "{{ redfish_storage_volume_perc_raid_controller_id }}"
    drives: "{{ redfish_storage_volume_drive_list[:1] }}"
    job_wait: true
  check_mode: false

- name: Fetching Volume_id from iDRAC
  ansible.builtin.include_tasks: ../__get_helper.yml
  vars:
    url: "Systems/System.Embedded.1/Storage/{{ redfish_storage_volume_controller_id }}/Volumes"

- name: Extracting volume_id
  ansible.builtin.set_fact:
    redfish_storage_volume_id: "{{ (redfish_storage_volume_fetched_output.json.Members | last)['@odata.id'] | ansible.builtin.split('/') | last }}"
