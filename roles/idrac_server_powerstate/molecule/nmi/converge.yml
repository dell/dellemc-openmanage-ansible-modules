---
- name: Converge
  hosts: all
  gather_facts: false
  tasks:
    - name: Pre-requisite - Server is Power On
      ansible.builtin.import_role:
        name: idrac_server_powerstate
      vars:
        hostname: "{{ lookup('env', 'IDRAC_IP') }}"
        username: "{{ lookup('env', 'IDRAC_USER') }}"
        password: "{{ lookup('env', 'IDRAC_PASSWORD') }}"
        validate_certs: false
        reset_type: "On"
        resource_id: "System.Embedded.1"
      check_mode: false
      tags: molecule-idempotence-notest

    - name: Fetching idrac_server_powerstate_wait_seconds from molecule env variable
      ansible.builtin.set_fact:
        wait_time: "{{ lookup('env', 'idrac_server_powerstate_wait_seconds', default=300) }}"
      when: idrac_server_powerstate_out.changed # noqa: no-handler
      check_mode: false
      tags: molecule-idempotence-notest

    - name: "Waiting after performing Power On operation"
      ansible.builtin.pause:
        seconds: "{{ wait_time }}"
      when: idrac_server_powerstate_out.changed # noqa: no-handler
      check_mode: false
      tags: molecule-idempotence-notest

    - name: Performing Nmi on the iDRAC device
      ansible.builtin.import_role:
        name: idrac_server_powerstate
      vars:
        hostname: "{{ lookup('env', 'IDRAC_IP') }}"
        username: "{{ lookup('env', 'IDRAC_USER') }}"
        password: "{{ lookup('env', 'IDRAC_PASSWORD') }}"
        validate_certs: false
        reset_type: "Nmi"
        resource_id: "System.Embedded.1"
      tags: molecule-idempotence-notest

    - name: Asserting Nmi in check mode
      ansible.builtin.assert:
        that: idrac_server_powerstate_out.msg == "Changes found to be applied."
      when: ansible_check_mode
      tags: molecule-idempotence-notest

    - name: Fetching idrac_server_powerstate_wait_seconds from molecule env variable
      ansible.builtin.set_fact:
        wait_time: "{{ lookup('env', 'idrac_server_powerstate_wait_seconds', default=300) }}"
      when: not ansible_check_mode and idrac_server_powerstate_out.changed
      tags: molecule-idempotence-notest

    - name: "Waiting after performing Nmi operation"
      ansible.builtin.pause:
        seconds: "{{ wait_time }}"
      when: not ansible_check_mode and idrac_server_powerstate_out.changed
      tags: molecule-idempotence-notest

    - name: Fetching iDRAC server powerstate after performing Nmi operation
      ansible.builtin.uri:
        url: "https://{{ lookup('env', 'IDRAC_IP') }}:{{ https_port }}/redfish/v1/Systems/System.Embedded.1"
        user: "{{ lookup('env', 'IDRAC_USER') }}"
        password: "{{ lookup('env', 'IDRAC_PASSWORD') }}"
        validate_certs: false
        headers: 'Accept=application/json'
      register: current_powerstate
      until: current_powerstate.json.PowerState == "On"
      retries: 10
      delay: 30
      when: not ansible_check_mode and idrac_server_powerstate_out.changed
      no_log: true
      tags: molecule-idempotence-notest

    - name: Asserting Nmi
      ansible.builtin.assert:
        that:
          - idrac_server_powerstate_out.msg == "Successfully performed the reset type operation 'Nmi'."
      when: not ansible_check_mode and idrac_server_powerstate_out.changed
      tags: molecule-idempotence-notest
