- name: Custom iso file permission
  become: true
  delegate_to: "{{ idrac_osd_host }}"
  ansible.builtin.file:
    path: "{{ custom_iso }}"
    mode: "0755"

- name: Copy custom iso to mounted path for NFS or CIFS
  become: true
  delegate_to: "{{ idrac_osd_host }}"
  ansible.builtin.copy:
    src: "{{ custom_iso }}"
    remote_src: true
    dest: "{{ idrac_osd_mount_path }}/custom_iso_mount"
    mode: "0755"
  when: dest_iso_share_type == 'CIFS' or dest_iso_share_type == 'NFS'

- name: Copy custom iso to HTTP or HTTPS share on linux
  vars:
    ansible_ssh_pass: "{{ ssh_pass }}"
    ansible_ssh_user: "{{ ssh_user }}"
  ansible.builtin.copy:
    src: "{{ custom_iso }}"
    dest: "{{ http_path }}"
    owner: "{{ dest_owner }}"
    group: "{{ dest_group }}"
    mode: "{{ dest_mode }}"
  remote_user: "{{ ssh_user }}"
  delegate_to: "{{ destination_path.path.split('/') | ansible.utils.ipaddr | first }}"
  when: (dest_iso_share_type == 'HTTP' or dest_iso_share_type == 'HTTPS') and (dest_os|lower == "linux")

- name: Copy custom iso to HTTP or HTTPS share on windows
  vars:
    ansible_ssh_pass: "{{ ssh_pass }}"
    ansible_ssh_user: "{{ ssh_user }}"
    ansible_remote_tmp: "{{ windows_user_tmp }}"
    become_method: runas
    ansible_shell_type: cmd
    shell_type: cmd
  ansible.windows.win_copy:
    src: "{{ custom_iso }}"
    dest: "{{ http_path }}"
  remote_user: "{{ ssh_user }}"
  delegate_to: "{{ destination_path.path.split('/') | ansible.utils.ipaddr | first }}"
  when: (dest_iso_share_type == 'HTTP' or dest_iso_share_type == 'HTTPS') and (dest_os|lower == "windows")

- name: Remove custom iso from tmp
  become: true
  delegate_to: "{{ idrac_osd_host }}"
  ansible.builtin.file:
    path: "{{ custom_iso }}"
    state: absent
  failed_when: false

- name: Remove the extracted directory
  become: true
  delegate_to: "{{ idrac_osd_host }}"
  ansible.builtin.file:
    path: "{{ iso_extract_dir.path }}"
    state: absent
  failed_when: false
  no_log: "{{ idrac_osd_std_log }}"
