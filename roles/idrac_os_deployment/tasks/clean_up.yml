---
# Clean up tmp dir and mounted paths
- name: Remove custom iso
  become: true
  delegate_to: "{{ idrac_osd_host }}"
  ansible.builtin.file:
    path: "{{ idrac_osd_mount_path }}/custom_iso_mount/{{ custom_iso | basename }}"
    state: absent
  failed_when: false
  when:
    - idrac_osd_cleanup_custom_iso and os_wait
    - custom_iso is defined

- name: Unmount the share paths
  become: true
  delegate_to: "{{ idrac_osd_host }}"
  ansible.posix.mount:
    state: unmounted
    path: "{{ item }}"
  with_items:
    - "{{ idrac_osd_mount_path }}/custom_iso_mount"
    - "{{ idrac_osd_mount_path }}/source_iso_mount"
  failed_when: false

- name: Clean up the working directory
  become: true
  delegate_to: "{{ idrac_osd_host }}"
  ansible.builtin.file:
    path: "{{ working_dir.path }}"
    state: absent
  failed_when: false
  when: working_dir is defined
  no_log: true

- name: Remove custom iso from HTTP or HTTPS share on Linux
  vars:
    ansible_ssh_pass: "{{ ssh_pass }}"
    ansible_ssh_user: "{{ ssh_user }}"
  ansible.builtin.file:
    path: "{{ http_path }}/{{ custom_iso | basename }}"
    owner: "{{ dest_owner }}"
    group: "{{ dest_group }}"
    mode: "{{ dest_mode }}"
    state: absent
  remote_user: "{{ ssh_user }}"
  delegate_to: "{{ destination_path.path.split('/') | ansible.utils.ipaddr | first }}"
  when:
    - custom_iso is defined
    - dest_iso_share_type is defined
    - dest_os is defined
    - (dest_iso_share_type == 'HTTP' or dest_iso_share_type == 'HTTPS') and (dest_os|lower == "linux")
    - idrac_osd_cleanup_custom_iso and os_wait
    - ssh_user is defined and ssh_user != ''
    - ssh_pass is defined and ssh_pass != ''
    - http_path is defined and http_path != ''

- name: Remove custom iso to HTTP or HTTPS share on windows
  vars:
    ansible_ssh_pass: "{{ ssh_pass }}"
    ansible_ssh_user: "{{ ssh_user }}"
    ansible_remote_tmp: "{{ windows_user_tmp }}"
    become_method: runas
    ansible_shell_type: cmd
    shell_type: cmd
  ansible.windows.win_file:
    path: "{{ http_path }}\\{{ custom_iso | basename }}"
    state: absent
  remote_user: "{{ ssh_user }}"
  delegate_to: "{{ destination_path.path.split('/') | ansible.utils.ipaddr | first }}"
  when:
    - custom_iso is defined
    - dest_iso_share_type is defined
    - dest_os is defined
    - (dest_iso_share_type == 'HTTP' or dest_iso_share_type == 'HTTPS') and (dest_os|lower == "windows")
    - idrac_osd_cleanup_custom_iso and os_wait
    - ssh_user is defined and ssh_user != ''
    - ssh_pass is defined and ssh_pass != ''
    - http_path is defined and http_path != ''
