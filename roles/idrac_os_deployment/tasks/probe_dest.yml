- name: Clean slate - Init unmount
  become: true
  delegate_to: "{{ idrac_osd_host }}"
  ansible.posix.mount:
    state: unmounted
    path: "{{ item }}"
  with_items:
    - "{{ idrac_osd_mount_path }}/custom_iso_mount"
    - "{{ idrac_osd_mount_path }}/source_iso_mount"
  failed_when: false

- name: Create working directory
  ansible.builtin.tempfile:
    state: directory
    prefix: omam_osd
  register: working_dir

- name: Initializing destination iso path type
  ansible.builtin.set_fact:
    idrac_osd_no_loggers:
      - Set download command
      - Mounting dest CIFS volume
      - Mounting CIFS volume to localhost
      - Download iso from http, https or ftp
      - Initializing iso path type and aliasing idrac opts
    dest_iso_share_type: null
    dest_iso_exists: false
    custom_iso: "{{ working_dir.path }}/{{ os_key }}_{{ os_version }}_{{ hostname }}.iso"

- name: Checking network share type is CIFS
  ansible.builtin.set_fact:
    dest_iso_share_type: "{{ item.value if destination_path.path.startswith(item.key) }}"
  with_dict: {'//': 'CIFS', '\\': 'CIFS'}
  when: not dest_iso_share_type

- name: Default is NFS
  ansible.builtin.set_fact:
    dest_iso_share_type: NFS
  when: not dest_iso_share_type

- name: Mounting NFS volume to localhost
  become: true
  delegate_to: "{{ idrac_osd_host }}"
  ansible.posix.mount:
    src: "{{ destination_path.path }}"
    path: "{{ idrac_osd_mount_path }}/custom_iso_mount"
    state: mounted
    fstype: nfs
    opts: rw,sync,hard
  register: dest_mount_path
  when: dest_iso_share_type == 'NFS'

- name: NFS path mounting failed
  ansible.builtin.fail:
    msg: "Mounting destiantion NFS share failed."
  when: dest_iso_share_type == 'NFS' and dest_mount_path.failed

- name: Mounting dest CIFS volume
  become: true
  delegate_to: "{{ idrac_osd_host }}"
  ansible.posix.mount:
    src: "{{ destination_path.path }}"
    path: "{{ idrac_osd_mount_path }}/custom_iso_mount"
    state: mounted
    opts: "rw,username={{ destination_path.username | split('@') | first }},password={{ destination_path.password }}"
    fstype: cifs
  register: dest_mount_path
  when: dest_iso_share_type == 'CIFS'
  no_log: true

- name: CIFS path mounting failed
  ansible.builtin.fail:
    msg: "Mounting destination CIFS share failed. Please check the path or credentials."
  when: dest_iso_share_type == 'CIFS' and dest_mount_path.failed

- name: Check if dest exists
  become: true
  delegate_to: "{{ idrac_osd_host }}"
  ansible.builtin.stat:
    path: "{{ idrac_osd_mount_path }}/custom_iso_mount/{{ custom_iso | basename }}"
  register: dest_iso_mount

- name: Set dest iso exists true
  ansible.builtin.set_fact:
    dest_iso_exists: true
  when: dest_iso_mount.stat.exists
