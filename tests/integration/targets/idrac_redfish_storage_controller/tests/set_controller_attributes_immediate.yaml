# Dell OpenManage Ansible modules
# Copyright (C) 2024 Dell Inc. or its subsidiaries. All Rights Reserved.

# GNU General Public License v3.0+ (see COPYING or
# https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Test that we have an iDRAC host, iDRAC username and iDRAC password
  ansible.builtin.fail:
    msg: 'Please define the following variables: idrac_ip, idrac_user and
     idrac_password.'
  when: 'idrac_ip is not defined or idrac_user is not defined or idrac_password
   is not defined'

- block:
    - name: Prerequisite - Fetch Storage details
      dellemc_idrac_storage_volume:
        state: "view"
      register: result_pre_req

    - ansible.builtin.set_fact:
        controller_name: "{{ result_pre_req.storage_status.Message.
         Controller.keys() | select('match', 'RAID.') | first}}"

    - name: Prerequisite - Change Storage controller attributes
      idrac_redfish_storage_controller: &idrac_redfish_storage_controller_1
        controller_id: "{{ controller_name }}"
        attributes:
          CheckConsistencyMode: "Normal"
          CopybackMode: "Off"
          PatrolReadMode: "Disabled"
        apply_time: Immediate
        job_wait: true
      register: prereq_result_set_attrs

    - ansible.builtin.pause: seconds=10
      when: prereq_result_set_attrs.changed

    - name: Constructing url
      ansible.builtin.set_fact:
        url_1: "https://{{ idrac_ip }}:{{ idrac_port }}/redfish/v1/"
        url_2: "Systems/System.Embedded.1/Storage/{{ controller_name }}/"
        url_3: "Controllers/{{ controller_name }}"

    - name: Final url
      ansible.builtin.set_fact:
        job_url: "{{ url_1 }}{{ url_2 }}{{ url_3 }}"

    - ansible.builtin.include_tasks: get_data.yml
      vars:
        url: "{{ job_url }}"

    - name: Verify prerequisite is set
      ansible.builtin.assert:
        that:
          - controller_name
          - fetched_data.json.Oem.Dell.DellStorageController.
           CheckConsistencyMode == "Normal"
          - fetched_data.json.Oem.Dell.DellStorageController.
           CopybackMode  == "Off"
          - fetched_data.json.Oem.Dell.DellStorageController.
           PatrolReadMode  == "Disabled"
        fail_msg: "Prerequisite is not set"
        success_msg: "Prerequisite is set successfully"

    - name: Configure Storage controller attributes without job wait at
       apply_time:Immediate (Check mode - Changes expected)
      idrac_redfish_storage_controller: &idrac_redfish_storage_controller_2
        controller_id: "{{ controller_name }}"
        attributes:
          CheckConsistencyMode: "StopOnError"
          CopybackMode: "OnWithSMART"
          PatrolReadMode: "Manual"
        apply_time: Immediate
      register: configure_attributes_output
      check_mode: true

    - name: Verify task status - Configure Storage controller attributes without
       job wait at apply_time:Immediate (Check mode - Changes expected)
      ansible.builtin.assert:
        that:
          - configure_attributes_output.changed
          - configure_attributes_output.msg == "Changes found to be applied."

    - name: Configure Storage controller attributes without job wait
       (Normal mode)
      idrac_redfish_storage_controller:
        <<: *idrac_redfish_storage_controller_2
      register: configure_attributes_output

    - ansible.builtin.include_role: name=prepare_lifecycle_controller_job
      vars:
        job_id: "{{configure_attributes_output.status.Id}}"
      when: configure_attributes_output.msg == "Successfully submitted the
       job that configures the controller attributes."

    - ansible.builtin.pause: seconds=10
      when: configure_attributes_output.changed

    - ansible.builtin.include_tasks: get_data.yml
      vars:
        url: "{{ job_url }}"

    - name: Verify task status - Configure Storage controller attributes
       without job wait at apply_time:Immediate (Normal mode)
      ansible.builtin.assert:
        that:
          - not configure_attributes_output.changed
          - configure_attributes_output.msg == "Successfully
           submitted the job that configures the controller attributes."
          - fetched_data.json.Oem.Dell.DellStorageController.
           CheckConsistencyMode == "StopOnError"
          - fetched_data.json.Oem.Dell.DellStorageController.
           CopybackMode == "OnWithSMART"
          - fetched_data.json.Oem.Dell.DellStorageController.
           PatrolReadMode == "Manual"

    - name: Configure Storage controller attributes without job wait at
       apply_time:Immediate (Idempotency mode)
      idrac_redfish_storage_controller:
        <<: *idrac_redfish_storage_controller_2
      register: configure_attributes_output_idempotency

    - name: Verify task status - Configure Storage controller attributes
       without job wait at apply_time:Immediate (Idempotency mode)
      ansible.builtin.assert:
        that:
          - not configure_attributes_output_idempotency.changed
          - configure_attributes_output_idempotency.msg == "No
           changes found to be applied."

    - name: Prerequisite - Change Storage controller attributes
      idrac_redfish_storage_controller:
        <<: *idrac_redfish_storage_controller_1
      register: change_attributes_output

    - ansible.builtin.pause: seconds=10
      when: change_attributes_output.changed

    - ansible.builtin.include_tasks: get_data.yml
      vars:
        url: "{{ job_url }}"

    - name: Verify prerequisite is set
      ansible.builtin.assert:
        that:
          - controller_name
          - fetched_data.json.Oem.Dell.DellStorageController.
           CheckConsistencyMode == "Normal"
          - fetched_data.json.Oem.Dell.DellStorageController.
           CopybackMode  == "Off"
          - fetched_data.json.Oem.Dell.DellStorageController.
           PatrolReadMode  == "Disabled"
        fail_msg: "Prerequisite is not set"
        success_msg: "Prerequisite is set successfully"

    - name: Configure Storage controller attributes with job wait at
       apply_time:Immediate (Check mode - Changes expected)
      idrac_redfish_storage_controller: &idrac_redfish_storage_controller_3
        controller_id: "{{ controller_name }}"
        attributes:
          CheckConsistencyMode: "StopOnError"
          CopybackMode: "OnWithSMART"
          PatrolReadMode: "Manual"
        apply_time: Immediate
        job_wait: true
      register: configure_attributes_output
      check_mode: true

    - name: Verify task status - Configure Storage controller attributes
       with job wait at apply_time:Immediate (Check mode - Changes expected)
      ansible.builtin.assert:
        that:
          - configure_attributes_output.changed
          - configure_attributes_output.msg == "Changes found to be applied."

    - name: Configure Storage controller attributes with job wait (Normal mode)
      idrac_redfish_storage_controller:
        <<: *idrac_redfish_storage_controller_3
      register: configure_attributes_output

    - ansible.builtin.pause: seconds=10
      when: configure_attributes_output.changed

    - ansible.builtin.include_tasks: get_data.yml
      vars:
        url: "{{ job_url }}"

    - name: Verify task status - Configure Storage controller attributes with
       job wait at apply_time:Immediate (Normal mode)
      ansible.builtin.assert:
        that:
          - configure_attributes_output.changed
          - configure_attributes_output.msg == "Successfully
           applied the controller attributes."
          - fetched_data.json.Oem.Dell.DellStorageController.
           CheckConsistencyMode == "StopOnError"
          - fetched_data.json.Oem.Dell.DellStorageController.
           CopybackMode == "OnWithSMART"
          - fetched_data.json.Oem.Dell.DellStorageController.
           PatrolReadMode == "Manual"

    - name: Verify task status - Configure Storage controller attributes with
       job wait at apply_time:Immediate (Idempotency mode)
      idrac_redfish_storage_controller:
        <<: *idrac_redfish_storage_controller_3
      register: configure_attributes_output_idempotency

    - name: Verify task status - Verify task status - Configure Storage
       controller attributes with job wait at apply_time:Immediate
       (Idempotency mode)
      ansible.builtin.assert:
        that:
          - not configure_attributes_output_idempotency.changed
          - configure_attributes_output_idempotency.msg ==
           "No changes found to be applied."

  module_defaults:
    dellemc.openmanage.dellemc_idrac_storage_volume:
      idrac_ip: "{{ idrac_ip }}"
      idrac_user: "{{ idrac_user }}"
      idrac_password: "{{ idrac_password }}"
      validate_certs: "{{ validate_certs }}"

    dellemc.openmanage.idrac_redfish_storage_controller:
      baseuri: "{{ idrac_ip }}:{{ idrac_port }}"
      username: "{{ idrac_user }}"
      password: "{{ idrac_password }}"
      validate_certs: "{{ validate_certs }}"
