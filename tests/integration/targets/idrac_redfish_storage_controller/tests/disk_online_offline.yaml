# Dell OpenManage Ansible modules
# Copyright (C) 2024 Dell Inc. or its subsidiaries. All Rights Reserved.

# GNU General Public License v3.0+ (see COPYING or
# https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Test that we have an iDRAC host, iDRAC username and iDRAC password
  ansible.builtin.fail:
    msg: 'Please define the following variables: idrac_ip, idrac_user and
     idrac_password.'
  when: 'idrac_ip is not defined or idrac_user is not defined or idrac_password
   is not defined'

- ansible.builtin.include_tasks: _helper.yml

- name: Pre-check - fail if enough disk not found to create VD on RAID 1
  ansible.builtin.fail:
    msg: 'Physical disks are not sufficient to proceed the test case need
     more than 2 and found {{ physicaldisks | length }}'
  when: physicaldisks | length < 2

- block:
    # removing if disks are assigned as hotspare and resetting the controller
    - ansible.builtin.include_tasks: _helper.yml
      vars:
        reset_trigger: 1
        target: "{{ physicaldisks[0] }}"

    # removing if disks are assigned as hotspare
    - ansible.builtin.include_tasks: _helper.yml
      vars:
        target: "{{ physicaldisks[1] }}"

    # Creating the VD on raid1 and making online the target disk as prereq
    - ansible.builtin.include_tasks: _helper.yml
      vars:
        volume_type: "RAID 1"
        span_length: 2
        id: ["{{ physicaldisks[0] }}", "{{ physicaldisks[1] }}"]
        vd_trigger: 1
        command: "ChangePDStateToOffline"
        target_disk: "{{ physicaldisks[0] }}"
        change_disk_state: 1

    - name: Change physical disk state to online. - check mode -
       (Change expected)
      idrac_redfish_storage_controller:
        command: "ChangePDStateToOnline"
        target: "{{ physicaldisks[0] }}"
      register: cm_result_online
      check_mode: true

    - name: Verify status of tasks
      ansible.builtin.assert:
        that:
          - cm_result_online.changed
          - cm_result_online.msg == "Changes found to be applied."

    - name: Change physical disk state to online. - Normal
      idrac_redfish_storage_controller:
        command: "ChangePDStateToOnline"
        target: "{{ physicaldisks[0] }}"
        job_wait: true
        job_wait_timeout: 1200
      register: result_online

    - name: Verify status of tasks
      ansible.builtin.assert:
        that:
          - result_online.msg == "Successfully performed the
           'ChangePDStateToOnline' operation."
          - result_online.changed

    - name: Change physical disk state to online. - Idempotence
      idrac_redfish_storage_controller:
        command: "ChangePDStateToOnline"
        target: "{{ physicaldisks[0] }}"
      register: idempotence_online

    - name: Verify status of tasks
      ansible.builtin.assert:
        that:
          - not idempotence_online.changed
          - idempotence_online.msg == "No changes found to be applied."

    - name: Change physical disk state to online. - Check mode -
       (No change expected)
      idrac_redfish_storage_controller:
        command: "ChangePDStateToOnline"
        target: "{{ physicaldisks[0] }}"
      register: no_cm_result_online
      check_mode: true

    - name: Verify status of tasks
      ansible.builtin.assert:
        that:
          - not no_cm_result_online.changed
          - no_cm_result_online.msg == "No changes found to be applied."

    # making one disk online if offline
    - ansible.builtin.include_tasks: _helper.yml
      vars:
        command: "ChangePDStateToOnline"
        target_disk: "{{ physicaldisks[0] }}"
        change_disk_state: 1
        run_trigger: 1

    - name: Change physical disk state to offline. - check mode -
       (Change expected)
      idrac_redfish_storage_controller:
        command: "ChangePDStateToOffline"
        target: "{{ physicaldisks[0] }}"
      register: cm_result_offline
      check_mode: true

    - name: Verify status of tasks
      ansible.builtin.assert:
        that:
          - cm_result_offline.changed
          - cm_result_offline.msg == "Changes found to be applied."

    - name: Change physical disk state to offline. - Normal
      idrac_redfish_storage_controller:
        command: "ChangePDStateToOffline"
        target: "{{ physicaldisks[0] }}"
      register: result_offline

    - name: Verify status of tasks
      ansible.builtin.assert:
        that:
          - result_offline.msg == "Successfully submitted the job that
           performs the 'ChangePDStateToOffline' operation."

    - ansible.builtin.include_role: name=prepare_lifecycle_controller_job
      vars:
        job_id: "{{result_offline.status.Id}}"
      when: result_offline.msg == "Successfully submitted the job that
       performs the 'ChangePDStateToOffline' operation."
      ignore_errors: true

    - name: Change physical disk state to offline. - Idempotence
      idrac_redfish_storage_controller:
        command: "ChangePDStateToOffline"
        target: "{{ physicaldisks[0] }}"
      register: idempotence_offline

    - name: Verify status of tasks
      ansible.builtin.assert:
        that:
          - not idempotence_offline.changed
          - idempotence_offline.msg == "No changes found to be applied."

    - name: Change physical disk state to offline. - Check mode -
       (No change expected)
      idrac_redfish_storage_controller:
        command: "ChangePDStateToOffline"
        target: "{{ physicaldisks[0] }}"
      register: no_cm_result_offline
      check_mode: true

    - name: Verify status of tasks
      ansible.builtin.assert:
        that:
          - not no_cm_result_offline.changed
          - no_cm_result_offline.msg == "No changes found to be applied."

  module_defaults:
    dellemc.openmanage.idrac_redfish_storage_controller:
      baseuri: "{{ idrac_ip | ansible.utils.ipwrap }}:{{ idrac_port }}"
      username: "{{ idrac_user }}"
      password: "{{ idrac_password }}"
      validate_certs: "{{ validate_certs }}"
