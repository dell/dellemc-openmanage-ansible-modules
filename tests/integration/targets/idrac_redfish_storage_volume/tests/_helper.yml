---
- block:
    - name: Fetching data from iDRAC
      ansible.builtin.uri:
        url: "https://{{ idrac_ip|ansible.utils.ipwrap }}:{{ idrac_port }}
          /redfish/v1/Systems/System.Embedded.1/Storage?$expand=*($levels=1)"
        user: "{{ idrac_user }}"
        password: "{{ idrac_password }}"
        method: GET
        validate_certs: false
        force_basic_auth: true
        return_content: true
        status_code: 200
        headers: 'Accept=application/json'
      register: fetched_output

    - name: Intializing set_fact variable
      ansible.builtin.set_fact:
        controller_name: ""
        physical_disks: []

    - name: Extracting Controller id
      ansible.builtin.set_fact:
        controller_name: "{{ item.Id }}"
        drive_list_odata: "{{ item.Drives }}"
      when:
        - search_in_name is defined and search_in_name in item.Name
        - item.StorageControllers[0].SupportedRAIDTypes != []
        - raid_type is defined and raid_type in
          item.StorageControllers[0].SupportedRAIDTypes
      loop: "{{ fetched_output.json.Members }}"

    - name: Extracting Drives id
      ansible.builtin.set_fact:
        physical_disks: "{{ physical_disks +  [item['@odata.id'] |
          ansible.builtin.split('/') | last] }}"
      loop: "{{ drive_list_odata }}"
      when: drive_list_odata is defined

    - name: Reset controller
      dellemc.openmanage.idrac_redfish_storage_controller:
        command: ResetConfig
        controller_id: "{{ controller_name }}"
      register: result_reset_controller

    - name: Track the job
      ansible.builtin.include_role: name=prepare_lifecycle_controller_job
      vars:
        job_id: "{{ result_reset_controller.status.Id }}"
      when: result_reset_controller.msg == "Successfully submitted the job that
        performs the 'ResetConfig' operation."

  module_defaults:
    dellemc.openmanage.idrac_redfish_storage_controller:
      baseuri: "{{ idrac_ip|ansible.utils.ipwrap }}:{{ idrac_port }}"
      username: "{{ idrac_user }}"
      password: "{{ idrac_password }}"
      validate_certs: "{{ validate_certs }}"
