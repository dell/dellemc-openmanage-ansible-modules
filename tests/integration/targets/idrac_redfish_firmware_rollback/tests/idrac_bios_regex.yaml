# Dell OpenManage Ansible modules
# Copyright (C) 2024 Dell Inc. or its subsidiaries. All Rights Reserved.

# GNU General Public License v3.0+ (see COPYING or
# https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Test that we have an iDRAC host, iDRAC username and iDRAC password
  ansible.builtin.fail:
    msg: 'Please define the following variables: idrac_ip, idrac_user and
     idrac_password.'
  when: 'idrac_ip is not defined or idrac_user is not defined or idrac_password
   is not defined'

- name: Check whether idrac IP is IPv4 or IPv6.
  ansible.builtin.set_fact:
    is_ipv4: "{{ idrac_ip is ansible.utils.ipv4 }}"
    is_ipv6: "{{ idrac_ip is ansible.utils.ipv6 }}"

- ansible.builtin.include_tasks: _get_firmware_inventory.yml

- ansible.builtin.include_tasks: _prereq_helper.yml
  vars:
    comp: "{{ item }}"
  when: 'item not in rollback_component_list '
  loop: ['Integrated Dell Remote Access Controller', 'BIOS']

- block:
    - ansible.builtin.include_tasks: _get_firmware_inventory.yml
      vars:
        component: 'BIOS'

    - ansible.builtin.set_fact:
        rollback_to_version: "{{ previous_version }}"

    - name: Rollback an BIOS component firmware with reboot as true
       (Check mode - changes expected)
      redfish_firmware_rollback: &redfish_firmware_rollback_1
        name: "^B.*S"
        reboot_timeout: 3600
        timeout: 300
      register: result
      check_mode: true

    - name: Verify task status - Rollback an BIOS component firmware
       with reboot as true (Check mode - changes expected)
      ansible.builtin.assert:
        that:
          - result.changed
          - result.msg == "Changes found to be applied."

    - name: Rollback an BIOS component firmware with reboot as true
       (Normal mode)
      dellemc.openmanage.redfish_firmware_rollback:
        <<: *redfish_firmware_rollback_1
      register: result

    - ansible.builtin.set_fact:
        uri_job_status: []

    - ansible.builtin.include_tasks: _get_job_details.yml
      vars:
        job_id: "{{ result.job_status[0].Id }}"

    - ansible.builtin.include_tasks: _get_firmware_inventory.yml
      vars:
        component: 'BIOS'

    - ansible.builtin.set_fact:
        module_job_status: "{{ result.job_status }}"

    - ansible.builtin.include_tasks: _assert_job_status.yml

    - name: Verify task status - Rollback an BIOS component firmware
       with reboot as true (Normal mode)
      ansible.builtin.assert:
        that:
          - result.changed
          - result.msg == "Successfully completed the job for firmware
           rollback."
          - installed_version == rollback_to_version

    - ansible.builtin.include_tasks: _get_firmware_inventory.yml
      vars:
        component: 'Integrated Dell Remote Access Controller'

    - ansible.builtin.set_fact:
        rollback_to_version: "{{ previous_version }}"

    - ansible.builtin.wait_for: timeout=30

    - name: Rollback an idrac component firmware with reboot as true
       (Check mode - changes expected)
      redfish_firmware_rollback: &redfish_firmware_rollback_2
        name: "Integra.*Ac{2}es{2} Controller$"
        reboot_timeout: 3600
        timeout: 300
      register: result
      check_mode: true

    - name: Verify task status - Rollback an idrac component firmware
       with reboot as true (Check mode - changes expected)
      ansible.builtin.assert:
        that:
          - result.changed
          - result.msg == "Changes found to be applied."

    - name: Rollback an idrac component firmware with reboot as true
       (Normal mode)
      dellemc.openmanage.redfish_firmware_rollback:
        <<: *redfish_firmware_rollback_2
      register: result

    - ansible.builtin.set_fact:
        uri_job_status: []

    - ansible.builtin.include_tasks: _get_job_details.yml
      vars:
        job_id: "{{ result.job_status[0].Id }}"

    - ansible.builtin.include_tasks: _get_firmware_inventory.yml
      vars:
        component: 'Integrated Dell Remote Access Controller'

    - ansible.builtin.set_fact:
        module_job_status: "{{ result.job_status }}"

    - ansible.builtin.include_tasks: _assert_job_status.yml

    - name: Verify task status - Rollback an idrac component firmware
       with reboot as true (Normal mode)
      ansible.builtin.assert:
        that:
          - result.changed
          - result.msg == "Successfully completed the job for firmware
           rollback."
          - installed_version == rollback_to_version

  module_defaults:
    dellemc.openmanage.redfish_firmware_rollback:
      baseuri: "{{ idrac_ip }}"
      username: "{{ idrac_user }}"
      password: "{{ idrac_password }}"
      validate_certs: "{{ validate_certs }}"
