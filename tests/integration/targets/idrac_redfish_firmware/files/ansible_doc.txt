- '        This module allows the firmware update of only one component'
- '        at a time. If the module is run for more than one component,'
- '        an error message is returned. Depending on the component, the'
- '        firmware update is applied after an automatic or manual'
- '        reboot.'
- ''
- 'ADDED IN: version 2.1.0 of dellemc.openmanage'
- ''
- 'OPTIONS (= is mandatory):'
- ''
- = baseuri
- '        IP address of the target out-of-band controller. For example-'
- '        <ipaddress>:<port>.'
- '        type: str'
- ''
- '- ca_path'
- '        The Privacy Enhanced Mail (PEM) file that contains a CA'
- '        certificate to be used for the validation.'
- '        default: null'
- '        type: path'
- '        added in: version 5.0.0 of dellemc.openmanage'
- ''
- ''
- = image_uri
- '        Firmware Image location URI or local path.'
- '        For example- http://<web_address>/components.exe or'
- '        /home/firmware_repo/component.exe.'
- '        type: str'
- ''
- '- job_wait'
- '        Provides the option to wait for job completion.'
- '        default: true'
- '        type: bool'
- ''
- '- job_wait_timeout'
- '        The maximum wait time of `job_wait'' in seconds. The job is'
- '        tracked only for this duration.'
- '        This option is applicable when `job_wait'' is `true''.'
- '        Note: If a firmware update needs a reboot, the job will get'
- '        scheduled and waits for no of seconds specfied in'
- '        `job_wait_time''. to reduce the wait time either give'
- '        `job_wait_time'' minimum or make `job_wait''as false and'
- '        retrigger.'
- '        default: 3600'
- '        type: int'
- ''
- '- password'
- '        Password of the target out-of-band controller.'
- '        If the password is not provided, then the environment variable'
- '        `IDRAC_PASSWORD'' is used.'
- '        Example: export IDRAC_PASSWORD=password'
- '        default: null'
- '        type: str'
- ''
- '- timeout'
- '        The socket level timeout in seconds.'
- '        default: 30'
- '        type: int'
- '        added in: version 5.0.0 of dellemc.openmanage'
- ''
- ''
- '- transfer_protocol'
- '        Protocol used to transfer the firmware image file. Applicable'
- '        for URI based update.'
- '        choices: [CIFS, FTP, HTTP, HTTPS, NSF, OEM, SCP, SFTP, TFTP]'
- '        default: HTTP'
- '        type: str'
- ''
- '- username'
- '        Username of the target out-of-band controller.'
- '        If the username is not provided, then the environment variable'
- '        `IDRAC_USERNAME'' is used.'
- '        Example: export IDRAC_USERNAME=username'
- '        default: null'
- '        type: str'
- ''
- '- validate_certs'
- '        If `false'', the SSL certificates will not be validated.'
- '        Configure `false'' only on personally controlled sites where'
- '        self-signed certificates are used.'
- '        Prior to collection version `5.0.0'', the `validate_certs'' is'
- '        `false'' by default.'
- '        default: true'
- '        type: bool'
- '        added in: version 5.0.0 of dellemc.openmanage'
- ''
- ''
- '- x_auth_token'
- '        Authentication token.'
- '        If the x_auth_token is not provided, then the environment'
- '        variable `IDRAC_X_AUTH_TOKEN'' is used.'
- '        Example: export IDRAC_X_AUTH_TOKEN=x_auth_token'
- '        default: null'
- '        type: str'
- '        added in: version 9.3.0 of dellemc.openmanage'
- ''
- ''
- ''
- 'NOTES:'
- '      * Run this module from a system that has direct access to'
- '        Redfish APIs.'
- '      * This module supports both IPv4 and IPv6 addresses.'
- '      * This module supports only iDRAC9 and above.'
- '      * This module does not support `check_mode''.'
- ''
- ''
- 'REQUIREMENTS:  python >= 3.9.6, urllib3'
- ''
- 'AUTHOR: Felix Stephen (@felixs88), Husniya Hameed (@husniya_hameed), Shivam Sharma
    (@Shivam-Sharma), Kritika Bhateja (@Kritika_Bhateja), Abhishek Sinha (@ABHISHEK-SINHA10)'
- ''
- 'EXAMPLES:'
- ''
- '---'
- '- name: Update the firmware from a single executable file available in a HTTP protocol'
- '  dellemc.openmanage.redfish_firmware:'
- '    baseuri: "192.168.0.1"'
- '    username: "user_name"'
- '    password: "user_password"'
- '    ca_path: "/path/to/ca_cert.pem"'
- '    image_uri: "http://192.168.0.2/firmware_repo/component.exe"'
- '    transfer_protocol: "HTTP"'
- ''
- '- name: Update the firmware from a single executable file available in a HTTP protocol
    with job_Wait'
- '  dellemc.openmanage.redfish_firmware:'
- '    baseuri: "192.168.0.1"'
- '    username: "user_name"'
- '    password: "user_password"'
- '    ca_path: "/path/to/ca_cert.pem"'
- '    image_uri: "http://192.168.0.2/firmware_repo/component.exe"'
- '    transfer_protocol: "HTTP"'
- '    job_wait: true'
- '    job_wait_timeout: 600'
- ''
- '- name: Update the firmware from a single executable file available in a local
    path'
- '  dellemc.openmanage.redfish_firmware:'
- '    baseuri: "192.168.0.1"'
- '    username: "user_name"'
- '    password: "user_password"'
- '    ca_path: "/path/to/ca_cert.pem"'
- '    image_uri: "/home/firmware_repo/component.exe"'
- ''
- ''
- 'RETURN VALUES:'
- '- error_info'
- '        Details of http error.'
- '        returned: on http error'
- '        sample:'
- '          error:'
- '            ''@Message.ExtendedInfo'':'
- '            - Message: Unable to complete the operation because the JSON data format
    entered'
- '                is invalid.'
- '              Resolution: ''Do the following and the retry the operation: 1) Enter
    the correct'
- '                JSON data format and retry the operation. 2) Make sure that no
    syntax error'
- '                is present in JSON data format. 3) Make sure that a duplicate key
    is not present'
- '                in JSON data format.'''
- '              Severity: Critical'
- '            - Message: The request body submitted was malformed JSON and could
    not be parsed'
- '                by the receiving service.'
- '              Resolution: Ensure that the request body is valid JSON and resubmit
    the request.'
- '              Severity: Critical'
- '            code: Base.1.2.GeneralError'
- '            message: A general error has occurred. See ExtendedInfo for more information.'
- '        type: dict'
- ''
- '- msg'
- '        Overall status of the firmware update task.'
- '        returned: always'
- '        sample: Successfully updated the firmware.'
- '        type: str'
- ''
- '- task'
- '        Returns ID and URI of the created task.'
- '        returned: success'
- '        sample:'
- '          id: JID_XXXXXXXXXXXX'
- '          uri: /redfish/v1/TaskService/Tasks/JID_XXXXXXXXXXXX'
- '        type: dict'
