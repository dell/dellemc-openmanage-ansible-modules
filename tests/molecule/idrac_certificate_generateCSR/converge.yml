---
- name: Converge
  hosts: all
  gather_facts: false
  vars:
    ca_cert_path: "{{ lookup('env', 'ca_cert_path') }}"
    cert_export_path: "{{ lookup('env', 'path_for_export_cert') }}"
    idrac_delegate_to: "{{ lookup('env', 'idrac_certificate_delegate_to') }}"

  tasks:
    - name: Setting up directory
      ansible.builtin.include_tasks:
        file: ../helper/idrac_certificate/__get_helper.yml

    - name: Generate HTTPS CSR signing request
      ansible.builtin.import_role:
        name: dellemc.openmanage.idrac_certificate
      vars:
        hostname: "{{ lookup('env', 'IDRAC_IP') }}"
        username: "{{ lookup('env', 'IDRAC_USER') }}"
        password: "{{ lookup('env', 'IDRAC_PASSWORD') }}"
        validate_certs: false
        ca_path: "{{ ca_cert_path }}"
        command: "generate_csr"
        certificate_type: "HTTPS"
        certificate_path: "{{ cert_export_path }}"
        cert_params:
          common_name: "sample.domain.com"
          organization_unit: "OrgUnit"
          locality_name: "Bangalore"
          state_name: "Karnataka"
          country_code: "IN"
          email_address: "admin@domain.com"
          organization_name: "OrgName"
          subject_alt_name:
            - "hostname1.chassis.com"
        idrac_certificate_delegate: "{{ idrac_delegate_to }}"

    - name: Setting up HTTPS CSR certificate path for exported file
      ansible.builtin.stat:
        path: "{{ idrac_certificate_out.certificate_path }}"
      register: csr_cert_file
      delegate_to: "{{ idrac_delegate_to }}"
      no_log: true

    - name: Verifying HTTPS generate CSR certificate
      ansible.builtin.assert:
        that:
          - csr_cert_file.stat.exists
          - not idrac_certificate_out.changed
          - not idrac_certificate_out.failed
          - idrac_certificate_out.msg == "Successfully performed the 'generate_csr' certificate operation."

    - name: Deleting the directory
      ansible.builtin.include_tasks:
        file: ../helper/idrac_certificate/__delete_directory.yml
